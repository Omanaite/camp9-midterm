// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  firstName String
  lastName  String
  password  String
  bookings  Booking[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Create a type Screening encompassing id, date, time, movieId, bookings
model Screening {
  id        String    @id @default(uuid())
  date      DateTime
  movieId   String
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

// Create a type for a Booking including id, screening, screeningId, seats, user, userId, createdAt, updatedAt
model Booking {
  id          String     @id @default(uuid())
  screening   Screening  @relation(fields: [screeningId], references: [id])
  screeningId String
  seats       Seat[]   
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

// create a model for a Seat id, row, number, price, booking, bookingId
model Seat {
  id        String   @id @default(uuid())
  row       String
  number    Int
  price     Float
  booking   Booking? @relation(fields: [bookingId], references: [id])
  bookingId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bookings Booking[]
}

model Booking{
  bookingId String @id @default(uuid()) @unique
  user User @relation(fields:[userId], references: [id])
  userId String 
  movieId String
  dateAndTime DateTime
  seats String[]
  price Decimal
}

// commit 